so this is updated login.tsx : 
import { signInWithEmailAndPassword } from "firebase/auth";
import { doc, getDoc } from "firebase/firestore";
import { auth, db } from "../../firebase";
import { useNavigate } from "react-router";
import { useState } from "react";
import {  useDispatch } from "react-redux";
import { setRole } from "../../redux/slices/userSlice";

const LoginForm = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const navigate = useNavigate();
  const dispatch = useDispatch();

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setError("");
    console.log("Email:", email);
    console.log("Password:", password);

    try {
      const userCredential = await signInWithEmailAndPassword(auth, email, password);
      const user = userCredential.user;

      const userDoc = doc(db, "users", user.uid);
      const userData = await getDoc(userDoc);

      if (userData.exists()) {
        const userRole = userData.data().role;

        dispatch(setRole(userRole));

        navigate(`/${userRole}/dashboard`);
      } else {
        setError("User role not found.");
      }
    } catch (error) {
      console.error("Error logging in:", error);
      setError("Invalid email or password.");
    }


    // try {
    //   const userCredentials = await signInWithEmailAndPassword(auth, email, password);
    //   const user = userCredentials.user;
    //   const userRef = doc(db, "userData", user.uid);
    //   const userDoc = await getDoc(userRef);

    //   if (userDoc.exists()) {
    //     const userRole = userDoc.data().role;
    //     dispatch(setRole(userRole));
    //   }

    //   navigate(`/${us}/dashboard`, { replace: true });
    // } catch (error) {
    //   console.log(error);
    // }
  }

  return (
    <div className="flex flex-col w-full items-center justify-center min-h-screen">
      <div className="max-w-md">
        <div className="shadow-md rounded-lg px-8 pt-6 pb-8">
          <h2 className="text-2xl font-bold mb-6 text-center">Login to Account</h2>
          <p className="text-gray-600 text-sm text-center mb-6">
            Please enter your email and password to continue
          </p>

          {error && <p className="text-red-500 text-center mb-4">{error}</p>}

          <form onSubmit={handleSubmit}>
            <div className="mb-4">
              <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="email">
                Email
              </label>
              <input
                className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                id="email"
                onChange={(e) => setEmail(e.target.value)}
                value={email}
                type="email"
                placeholder="you@example.com"
              />
            </div>

            <div className="mb-6">
              <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="password">
                Password
              </label>
              <input
                className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline"
                id="password"
                onChange={(e) => setPassword(e.target.value)}
                value={password}
                type="password"
                placeholder="**********"
              />
              <a className="inline-block align-baseline font-bold text-sm" href="#">
                Forgot Password?
              </a>
            </div>

            <div className="flex items-center justify-between">
              <label className="inline-flex items-center">
                <input
                  type="checkbox"
                  className="form-checkbox h-4 w-4 transition duration-150 ease-in-out"
                />
                <span className="ml-2 text-gray-700 text-sm">Remember me</span>
              </label>
            </div>

            <div className="mt-8">
              <button
                type="submit"
                className="w-full bg-primary text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
              >
                Sign In
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default LoginForm;
now as role is being set here right ? so how to implement this in app.tsx to fetch role and there pages accordingly. heres app.tsx : 







Email: ceo@ewl.com
Login.tsx:20 Password: 1212122
Login.tsx:23 
        
        
       POST https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCPh3Gninp3iJ1_7o1OFOonOp81WBBdkE0 400 (Bad Request)
(anonymous) @ firebase_auth.js?v=05370b53:1089
await in (anonymous)
_performFetchWithErrorHandling @ firebase_auth.js?v=05370b53:1098
_performApiRequest @ firebase_auth.js?v=05370b53:1058
_performSignInRequest @ firebase_auth.js?v=05370b53:1133
signInWithPassword @ firebase_auth.js?v=05370b53:3377
handleRecaptchaFlow @ firebase_auth.js?v=05370b53:3144
_getIdTokenResponse @ firebase_auth.js?v=05370b53:3460
_processCredentialSavingMfaContextIfNecessary @ firebase_auth.js?v=05370b53:4484
_signInWithCredential @ firebase_auth.js?v=05370b53:4568
signInWithCredential @ firebase_auth.js?v=05370b53:4576
signInWithEmailAndPassword @ firebase_auth.js?v=05370b53:4805
handleSubmit @ Login.tsx:23
callCallback2 @ chunk-VIJJTZRL.js?v=05370b53:3680
invokeGuardedCallbackDev @ chunk-VIJJTZRL.js?v=05370b53:3705
invokeGuardedCallback @ chunk-VIJJTZRL.js?v=05370b53:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-VIJJTZRL.js?v=05370b53:3742
executeDispatch @ chunk-VIJJTZRL.js?v=05370b53:7046
processDispatchQueueItemsInOrder @ chunk-VIJJTZRL.js?v=05370b53:7066
processDispatchQueue @ chunk-VIJJTZRL.js?v=05370b53:7075
dispatchEventsForPlugins @ chunk-VIJJTZRL.js?v=05370b53:7083
(anonymous) @ chunk-VIJJTZRL.js?v=05370b53:7206
batchedUpdates$1 @ chunk-VIJJTZRL.js?v=05370b53:18966
batchedUpdates @ chunk-VIJJTZRL.js?v=05370b53:3585
dispatchEventForPluginEventSystem @ chunk-VIJJTZRL.js?v=05370b53:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-VIJJTZRL.js?v=05370b53:5484
dispatchEvent @ chunk-VIJJTZRL.js?v=05370b53:5478
dispatchDiscreteEvent @ chunk-VIJJTZRL.js?v=05370b53:5455Understand this errorAI
Login.tsx:39 Error logging in: FirebaseError: Firebase: Error (auth/invalid-credential).
    at createErrorInternal (firebase_auth.js?v=05370b53:699:37)
    at _fail (firebase_auth.js?v=05370b53:664:9)
    at _performFetchWithErrorHandling (firebase_auth.js?v=05370b53:1122:9)
    at async _performSignInRequest (firebase_auth.js?v=05370b53:1133:26)
    at async _signInWithCredential (firebase_auth.js?v=05370b53:4568:20)
    at async handleSubmit (Login.tsx:23:30)
overrideMethod @ hook.js:608
handleSubmit @ Login.tsx:39
await in handleSubmit
callCallback2 @ chunk-VIJJTZRL.js?v=05370b53:3680
invokeGuardedCallbackDev @ chunk-VIJJTZRL.js?v=05370b53:3705
invokeGuardedCallback @ chunk-VIJJTZRL.js?v=05370b53:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-VIJJTZRL.js?v=05370b53:3742
executeDispatch @ chunk-VIJJTZRL.js?v=05370b53:7046
processDispatchQueueItemsInOrder @ chunk-VIJJTZRL.js?v=05370b53:7066
processDispatchQueue @ chunk-VIJJTZRL.js?v=05370b53:7075
dispatchEventsForPlugins @ chunk-VIJJTZRL.js?v=05370b53:7083
(anonymous) @ chunk-VIJJTZRL.js?v=05370b53:7206
batchedUpdates$1 @ chunk-VIJJTZRL.js?v=05370b53:18966
batchedUpdates @ chunk-VIJJTZRL.js?v=05370b53:3585
dispatchEventForPluginEventSystem @ chunk-VIJJTZRL.js?v=05370b53:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-VIJJTZRL.js?v=05370b53:5484
dispatchEvent @ chunk-VIJJTZRL.js?v=05370b53:5478
dispatchDiscreteEvent @ chunk-VIJJTZRL.js?v=05370b53:5455Understand this errorAI
Login.tsx:19 Email: ceo@ewl.com
Login.tsx:20 Password: 121212
Login.tsx:39 Error logging in: FirebaseError: Missing or insufficient permissions